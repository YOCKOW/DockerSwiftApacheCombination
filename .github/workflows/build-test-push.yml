name: "Build/Test/Push(if necessary)"
on:
  push:
    branches:
      - "**"
    tags:
      - "release-*"
      - "push-test-*"
  pull_request:
    branches:
      - "**"
permissions:
  packages: write
  contents: read
  attestations: write
  id-token: write
jobs:
  constants:
    name: Set Global Constants
    runs-on: ubuntu-latest
    steps:
      - name: Define Constants
        id: define-constants
        env:
          REF_TYPE: ${{ github.ref_type }}
          REF_NAME: ${{ github.ref_name }}
        run: |
          echo "::notice::Defining Constants..."
          case "$REF_TYPE" in
          branch)
            if [[ "$REF_NAME" == "main" ]]; then
              echo "tag_name_suffix=latest" >>"$GITHUB_OUTPUT"
              exit 0
            fi
          ;;
          tag)
            if [[ "$REF_NAME" == release-* ]] || [[ "$REF_NAME" == push-test-* ]]; then
              echo "tag_name_suffix=$REF_NAME" >>"$GITHUB_OUTPUT"
              exit 0
            fi
          ;;
          esac
          echo "tag_name_suffix=" >>"$GITHUB_OUTPUT"
    outputs:
      DOCKER_REGISTRY: ghcr.io
      DOCKER_USERNAME: ${{ github.actor }}
      DOCKER_DEPS_IMAGE_BASENAME: swift-de-cgi-deps
      DOCKER_IMAGE_BASENAME: swift-de-cgi
      DOCKER_TAG_NAME_SUFFIX: ${{ steps.define-constants.outputs.tag_name_suffix }}
      LUA_VERSION: "5.4.8"
      LUA_HASH: "4f18ddae154e793e46eeab727c59ef1c0c0c2b744e7b94219710d76f530629ae"
      PCRE2_VERSION: "10.45"
  generate-tags:
    name: Generate Tags for Each Image
    needs:
      - constants
    runs-on: ubuntu-latest
    steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
        - uses: ./.github/workflows/composite_join-prefixes-suffixes
          id: lua-tags
          with:
            prefixes: Lua-
            suffixes: |
              ${{ needs.constants.outputs.LUA_VERSION }}
              ${{ needs.constants.outputs.DOCKER_TAG_NAME_SUFFIX }}
        - uses: ./.github/workflows/composite_join-prefixes-suffixes
          id: pcre2-tags
          with:
            prefixes: PCRE2-
            suffixes: |
              ${{ needs.constants.outputs.PCRE2_VERSION }}
              ${{ needs.constants.outputs.DOCKER_TAG_NAME_SUFFIX }}
    outputs:
      LUA_TAGS: ${{ steps.lua-tags.outputs.joined }}
      PCRE2_TAGS: ${{ steps.pcre2-tags.outputs.joined }}
  build-lua:
    name: Build Lua
    needs:
      - constants
      - generate-tags
    uses: ./.github/workflows/reusable_build-multiplatform-image.yml
    with:
      dockerfile: ./images/deps/Lua/Dockerfile
      build-args: |
        LUA_VERSION=${{ needs.constants.outputs.LUA_VERSION }}
        LUA_HASH=${{ needs.constants.outputs.LUA_HASH }}
      registry: ${{ needs.constants.outputs.DOCKER_REGISTRY }}
      username: ${{ needs.constants.outputs.DOCKER_USERNAME }}
      image-basename: ${{ needs.constants.outputs.DOCKER_DEPS_IMAGE_BASENAME }}
      tags: ${{ needs.generate-tags.outputs.LUA_TAGS }}
      test-command: docker run --rm -t "$DOCKER_TEST_TAG" show-licenses
      push: true
    secrets:
      password: ${{ secrets.GITHUB_TOKEN }}
  build-pcre2:
    name: Build PCRE2
    needs:
      - constants
      - generate-tags
    uses: ./.github/workflows/reusable_build-multiplatform-image.yml
    with:
      dockerfile: ./images/deps/PCRE2/Dockerfile
      build-args: PCRE2_VERSION=${{ needs.constants.outputs.PCRE2_VERSION }}
      registry: ${{ needs.constants.outputs.DOCKER_REGISTRY }}
      username: ${{ needs.constants.outputs.DOCKER_USERNAME }}
      image-basename: ${{ needs.constants.outputs.DOCKER_DEPS_IMAGE_BASENAME }}
      tags: ${{ needs.generate-tags.outputs.PCRE2_TAGS }}
      test-command: docker run --rm -t "$DOCKER_TEST_TAG" show-licenses
      push: true
    secrets:
      password: ${{ secrets.GITHUB_TOKEN }}
