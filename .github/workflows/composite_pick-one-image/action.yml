name: Pick one built image
inputs:
  build-results-json:
    description: JSON representation for results of building image
    required: true
runs:
  using: composite
  steps:
    - name: Pick one built image
      id: pick-up
      uses: actions/github-script@v3
      env:
        BUILD_RESULTS: ${{ inputs.build-results-json }}
      with:
        result-encoding: string
        script: |
          const buildResultsJSON = process.env.BUILD_RESULTS;
          const parsedResults = JSON.parse(buildResultsJSON);
          const resultValues = Object.values(parsedResults)
          if (resultValues.length < 1 || !resultValues.every((resultValue) => typeof resultValue == 'boolean')) {
            throw new Error("Unexpected results?!");
          }
          const tagComparator = (tag1, tag2) => {
            if (tag1.includes("latest")) {
              if (!tag2.includes("latest")) {
                return -1
              }
            }
            if (tag2.includes("latest")) {
              return 1;
            }
            return tag2.localeCompare(tag1);
          };
          const allImageTags = Object.keys(parsedResults).sort((tag1, tag2) => {
            if (parsedResults[tag1] && !parsedResults[tag2]) {
              return -1;
            } else if (!parsedResults[tag1] && parsedResults[tag2]) {
              return 1;
            }
            return tagComparator(tag1, tag2);
          });
          return allImageTags[0];
outputs:
  image-tag:
    description: The image tag that was picked up in this action.
    value: ${{ steps.pick-up.outputs.result }}